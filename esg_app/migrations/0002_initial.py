# Generated by Django 5.2.1 on 2025-05-29 06:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('esg_app', '0001_initial_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Company name', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('location', models.CharField(help_text='Company headquarters location', max_length=255)),
                ('sector', models.CharField(choices=[('TECHNOLOGY', 'Technology'), ('HEALTHCARE', 'Healthcare'), ('FINANCE', 'Finance'), ('ENERGY', 'Energy'), ('MANUFACTURING', 'Manufacturing'), ('RETAIL', 'Retail'), ('AGRICULTURE', 'Agriculture'), ('TRANSPORTATION', 'Transportation'), ('REAL_ESTATE', 'Real Estate'), ('UTILITIES', 'Utilities'), ('OTHER', 'Other')], help_text='Industry sector of the company', max_length=50)),
                ('reporting_period_start', models.DateField(help_text='Start date of the current reporting period')),
                ('reporting_period_end', models.DateField(help_text='End date of the current reporting period')),
                ('description', models.TextField(blank=True, help_text='Optional description of the company', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Business unit name', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('unit_type', models.CharField(choices=[('DEPARTMENT', 'Department'), ('DIVISION', 'Division'), ('SUBSIDIARY', 'Subsidiary'), ('BRANCH', 'Branch'), ('FACILITY', 'Facility'), ('REGION', 'Region'), ('OTHER', 'Other')], help_text='Type of business unit', max_length=50)),
                ('location', models.CharField(help_text='Physical location of the business unit', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description of the business unit operations', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this business unit is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(help_text='Company this business unit belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='business_units', to='esg_app.company')),
            ],
            options={
                'verbose_name': 'Business Unit',
                'verbose_name_plural': 'Business Units',
                'ordering': ['company__name', 'name'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the ESG metric', max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('esg_category', models.CharField(choices=[('ENVIRONMENTAL', 'Environmental'), ('SOCIAL', 'Social'), ('GOVERNANCE', 'Governance')], help_text='ESG category (Environmental, Social, or Governance)', max_length=50)),
                ('metric_type', models.CharField(help_text="Specific type of metric (e.g., 'Energy Consumption', 'Safety Hours')", max_length=100)),
                ('unit_of_measurement', models.CharField(choices=[('KWH', 'Kilowatt Hours'), ('TONNES', 'Tonnes'), ('LITERS', 'Liters'), ('HOURS', 'Hours'), ('PERCENTAGE', 'Percentage'), ('COUNT', 'Count'), ('RATIO', 'Ratio'), ('CURRENCY', 'Currency'), ('OTHER', 'Other')], help_text='Unit of measurement for this metric', max_length=50)),
                ('value', models.DecimalField(decimal_places=4, help_text='Numeric value of the metric', max_digits=15)),
                ('reporting_year', models.PositiveIntegerField(help_text='Year this metric value was reported')),
                ('reporting_period', models.CharField(default='ANNUAL', help_text="Reporting period (e.g., 'Q1', 'Q2', 'ANNUAL')", max_length=50)),
                ('description', models.TextField(blank=True, help_text='Optional description or notes about this metric', null=True)),
                ('data_source', models.CharField(blank=True, help_text='Source of the data for this metric', max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether this metric has been verified/audited')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_unit', models.ForeignKey(help_text='Business unit this metric belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='esg_app.businessunit')),
            ],
            options={
                'verbose_name': 'Metric',
                'verbose_name_plural': 'Metrics',
                'ordering': ['-reporting_year', 'esg_category', 'name'],
                'unique_together': {('business_unit', 'name', 'reporting_year', 'reporting_period')},
            },
        ),
    ]
